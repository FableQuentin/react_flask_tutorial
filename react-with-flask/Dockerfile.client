# Multi-stage Dockerfile

# === First Build Step: build the React frontend ===
FROM node:22-alpine as build-step

WORKDIR /app

ENV PATH /app/node_modules/.bin:$PATH

# Copy React project files 
COPY package.json package-lock.json vite.config.js index.html ./
COPY ./src ./src
COPY ./public ./public

# Install dependencies
RUN npm install
# Build client (in the /app/dist/ directory)
RUN npm run build

# === Second Build Step: build an nginx container ===
# This way, we avoid 'Node.js' and 'npm'-related shings to be copied (as these tools are not needed anymore). 
# Notes: 
#   - '/usr/share/nginx/html' is the directory where the nginx container expects the files to be served to be installed;
#   - 'deployment/nginx/nginx.default.conf' is the config file for the nginx server.
FROM nginx:stable-alpine

COPY --from=build-step /app/dist /usr/share/nginx/html
COPY deployment/nginx/nginx.default.conf /etc/nginx/conf.d/default.conf

# Expose container port to the outside world (uWSGI application server will listen here)
EXPOSE 80
